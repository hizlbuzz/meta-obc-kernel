// SPDX-License-Identifier: GPL-2.0 OR BSD-3-Clause
/*
 * Copyright (C) 2021 Martin Schweingruber <martin.schweingruber@schmid-elektronik.ch>
 */

#include "stm32mp153a-qsmp-1530-obc.dtsi"
/ {
	model = "QSMP-1530 module on OBC";
    
	leds {
        compatible = "gpio-leds";
        
        can0 {
            linux,default-trigger = "none";
            gpios = <&gpioa 10 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>; /* Pin 77 */
            default-state = "on";
        };

        can1 {
            linux,default-trigger = "none";
            gpios = <&gpiod 8 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>; /* Pin 76 */
            default-state = "off";
        };

        relay {
            linux,default-trigger = "none";
            default-state = "on";
            gpios = <&gpioi 6 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>; /* Pin 75 */
        };

        button {
            linux,default-trigger = "none";
            gpios = <&gpioi 5 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>; /* Pin 74 */
        };

        on24 {
            linux,default-trigger = "none";
            gpios = <&gpiof 12 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>; /* Pin 70 */
        };

        on5 {
            linux,default-trigger = "none";
            gpios = <&gpioi 2 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>; /* Pin 69 */
        };
    };

    reg_2v5: regulator-2v5 {
        compatible = "regulator-fixed";
        regulator-name = "2v5";
        regulator-min-microvolt = <2500000>;
        regulator-max-microvolt = <2500000>;
        regulator-always-on;
    };


};

&i2c6 {
    ds3231: ds3231@68 {
        compatible = "maxim,ds3231";
        reg = <0x68>;
        #clock-cells = <1>;
        status = "okay";
    };

    // TODO how to set REF_SEL bit
    // remove adi device, as soon we receive the next prototype without external adc
    ad7991@28 {
        compatible = "adi,ad7991";
        reg = <0x28>;
        vcc-supply = <&reg_3v3>;
        vref-supply = <&reg_3v3>;
        status = "okay";
    };
};

// spi pins are used as adc input
&spi6 {
	status = "disabled";
};

&adc {
	vdd-supply = <&reg_3v3>;
	vdda-supply = <&reg_3v3>;
    // "somebody" writes reg_3v3 to vref
    // so set vrefbuf (2.5V)
	vref-supply = <&vrefbuf>;
	status = "okay";
};

&adc2 {
    // ADC2, Channel 3 (PIN 98), Channel 19 (Pin 100)
    st,adc-channels = <3 19>;
    st,min-sample-time-nsecs = <5000>;
};
